import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC, LinearSVC
from sklearn.neighbors import KNeighborsClassifier
from sklearn import metrics
from sklearn import preprocessing


# Loading the Datase
df = pd.read_csv('emails.csv')


df.head()


df.dtypes


# Cleaning
df.drop(columns=['Email No.'], inplace=True)


df.isna().sum()


df.describe()


X=df.drop('Prediction',axis=1) #Independent Variables
y=df['Prediction'] #Dependent Variable
X.shape, y.shape


# Splitting the Dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.15, random_state=0)


models = {
"K-Nearest Neighbors": KNeighborsClassifier(n_neighbors=2),
"Linear SVM":LinearSVC(random_state=8, max_iter=900000),
"Polynomical SVM":SVC(kernel="poly", degree=2, random_state=8),
"RBF SVM":SVC(kernel="rbf", random_state=8),
"Sigmoid SVM":SVC(kernel="sigmoid", random_state=8)
}


from sklearn.svm import LinearSVC
# For LinearSVC
linear_svc_model = LinearSVC(dual=True)  # or linear_svc_model = LinearSVC(dual=False)



# Fit and predict on each model
for model_name, model in models.items():
    y_pred=model.fit(X_train, y_train).predict(X_test)
    print(f"Accuracy for {model_name} model \t: {metrics.accuracy_score(y_test, y_pred)}")
